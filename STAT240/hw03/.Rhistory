contributors()
install.packages("tidyverse")
?strsplit
mendota = read_csv("../../data/lake-mendota-winters-2022.csv")
## Load in the core tidyverse packages
##  - including ggplot2 for graphics;
##  - and dplyr for data calculations
library(tidyverse)
library(lubridate)
mendota = read_csv("../../data/lake-mendota-winters-2022.csv")
pwd
.
ls
/
mendota = read_csv("../../data/lake-mendota-winters-2022.csv")
mendota = read_csv("./../data/lake-mendota-winters-2022.csv")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE,
error = TRUE)
#library(tidyverse)
## Load in the core tidyverse packages
##  - including ggplot2 for graphics;
##  - and dplyr for data calculations
library(tidyverse)
library(lubridate)
mendota = read_csv("../../data/lake-mendota-winters-2022.csv")
mendota = read_csv("/data/lake-mendota-winters-2022.csv")
mendota = read_csv("./data/lake-mendota-winters-2022.csv")
## Add your code here
top_five_temps = official %>%
distinct(tmax) %>%
arrange(desc(tmax)) %>%
head(5) %>%
pull(tmax)
setwd("~/Desktop/STAT 240/homework/hw03")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE,
message=FALSE, warning = FALSE,
fig.height = 3,
error = TRUE)
library(tidyverse)
library(lubridate)
source("../../scripts/viridis.R")
# Chunk 2: read-planet-data
## Read in the csv file
planets = read_csv("../../data/exoplanets-clean-through-2022.csv")
# Chunk 3
## Add your code here
small_planets = planets %>% select(-id) %>%
filter(radius < 1 & mass < 1) %>% arrange(mass)
print(small_planets, n = Inf)
# Chunk 4
### Add your code here
radial_planets = planets %>%
filter(method == "Radial Velocity") %>%
drop_na(year, mass) %>%
group_by(year) %>%
summarise(num_planets = n(), min_mass = min(mass))
head(radial_planets, 10)
ggplot(radial_planets, aes(x = year, y = min_mass, size=num_planets)) +
geom_point() +
scale_y_log10() +
guides(size = guide_legend(title = "Number of Planets")) +
xlab("Year") +
ylab("Min. mass of planets discovered (log10 scale)") +
ggtitle("Bubble plot the minimum mass of planets discovered in a given year", subtitle = "Using Radial Velocity Method of discovery") +
theme(axis.title.y = element_text(size = 8))
# Chunk 5
### Add your code here
common_methods = planets %>% group_by(method) %>% summarise(num_per_method = n()) %>% filter(num_per_method >= 30) %>% arrange(desc(num_per_method))
common_methods
# Chunk 6
### Add your code here
common_methods_names = common_methods %>% pull(method)
total_per_year = planets %>%
filter(method %in% common_methods_names) %>%
group_by(year) %>%
summarise(total = n())
summary = planets %>%
filter(method %in% common_methods_names) %>%
group_by(year, method) %>%
summarise(n = n()) %>%
left_join(total_per_year) %>%
mutate(proportion = n/total) %>%
select(year, method, n, proportion)
# Chunk 7
### Add your code here
head(summary,10)
# Chunk 8
### Add your code here
ggplot(summary, aes(x=year, y=proportion, fill = method)) +
geom_col(position = position_stack(), width=0.7) +
guides(fill = guide_legend(title = "Method of Discovery")) +
xlab("Year") +
ylab("Proportion of Discovery Method") +
ggtitle("Bar plot of discovery methods in a year", subtitle = "Proportions of each method stacked in a given year")
# Chunk 9
## Add your code here
im_summary = summary %>% filter(year >= 2010 & year <= 2022 & method != 'Transit' & method != 'Radial Velocity')
ggplot(im_summary, aes(x=year, y=n, fill = method)) +
geom_col(position = position_dodge2(preserve = "single"), width=0.7) +
guides(fill = guide_legend(title = "Method of Discovery")) +
scale_x_continuous(breaks = 2010:2022) +
xlab("Year") +
ylab("Number of planets discovered") +
ggtitle("Bar plot of planets discovered in each year", subtitle = "Methods of Discovery are Imaging and Microlensing only")
# Chunk 10
official = read_csv("../../data/madison-weather-official-1869-2022.csv")
# Chunk 11
## Add your code here
top_five_temps = official %>%
distinct(tmax) %>%
arrange(desc(tmax)) %>%
head(5) %>%
pull(tmax)
top_temps_dates = official %>%
arrange(desc(tmax)) %>%
filter(tmax %in% top_five_temps) %>%
select(date, tmax)
top_temps_dates
# Chunk 12
## Add your code here
pos_prcp = official %>%
mutate(month = month(date, label = TRUE)) %>%
group_by(month) %>%
summarise(total_days = n(),
positive_prcp_days = sum(prcp > 0, na.rm = TRUE),
proportion = positive_prcp_days / total_days) %>%
select(month, proportion)
pos_prcp
# Chunk 13
## Add your code here
avg_temps = official %>%
mutate(year = year(date), month = month(date, label = TRUE)) %>%
filter(year >= 1991 & year <= 2020) %>%
group_by(month) %>%
summarise(mean_temp = mean(tavg))
twentytwo_avg_temps = official %>%
mutate(year = year(date), month = month(date, label = TRUE)) %>%
filter(year == 2022) %>%
group_by(month) %>%
summarise(twentytwo_temps = mean(tavg))
left_join(avg_temps,twentytwo_avg_temps)
# Chunk 14
## Add your code here
ten_highest_avg = official %>%
mutate(year = year(date)) %>%
filter(year >= 1869) %>%
group_by(year) %>%
summarise(year_avg = max(tavg)) %>%
arrange(desc(year_avg)) %>%
head(10)
ten_highest_avg
# Chunk 15
mayjun_prcp = official %>%
mutate(year = year(date), month = month(date, label = TRUE)) %>%
filter(year >= 1869 & year <= 2022 & (month == 'May' | month == 'Jun')) %>%
group_by(year, month) %>%
summarise(total_prcp = sum(prcp))
mayjun_prcp_ranked = mayjun_prcp %>%
arrange(month, total_prcp, year) %>%
group_by(month) %>%
mutate(rank = row_number())
# Get the top 25 driest Mays:
driest_mays = mayjun_prcp_ranked %>%
filter(month == "May") %>%
select(rank, everything()) %>%
head(25)
driest_junes = mayjun_prcp_ranked %>%
filter(month == "Jun") %>%
select(rank, everything()) %>%
head(25)
print(driest_mays, n=25)
print(driest_junes, n=25)
# Chunk 16
combined = mayjun_prcp %>%
group_by(year) %>%
summarise(total_prcp = sum(total_prcp)) %>%
drop_na()
ggplot(combined, aes(x=year, y=total_prcp)) +
geom_line(color = "black", fill = "white", width=0.9) +
geom_hline(yintercept = (0.95+1.14), linetype = "dashed", color = "red") +
geom_smooth(se = FALSE) +
xlab("Year") +
ylab("Total Precipitation") +
ggtitle("Line plot of precipitation in each year (May and June)", subtitle = "Smooth trendline and precipitation in May, Jun 2023 indicated")
combined = mayjun_prcp %>%
group_by(year) %>%
summarise(total_prcp = sum(total_prcp)) %>%
drop_na()
ggplot(combined, aes(x=year, y=total_prcp)) +
geom_point() +
geom_hline(yintercept = (0.95+1.14), linetype = "dashed", color = "red") +
geom_smooth(se = FALSE) +
xlab("Year") +
ylab("Total Precipitation") +
ggtitle("Line plot of precipitation in each year (May and June)", subtitle = "Smooth trendline and precipitation in May, Jun 2023 indicated")
## Add your code here
ten_highest_avg = official %>%
mutate(year = year(date)) %>%
filter(year >= 1869) %>%
group_by(year) %>%
summarise(year_avg = max(tavg)) %>%
arrange(desc(year_avg)) %>%
head(10)
ten_highest_avg
