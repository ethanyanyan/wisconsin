contributors()
install.packages("tidyverse")
?strsplit
mendota = read_csv("../../data/lake-mendota-winters-2022.csv")
## Load in the core tidyverse packages
##  - including ggplot2 for graphics;
##  - and dplyr for data calculations
library(tidyverse)
library(lubridate)
mendota = read_csv("../../data/lake-mendota-winters-2022.csv")
pwd
.
ls
/
mendota = read_csv("../../data/lake-mendota-winters-2022.csv")
mendota = read_csv("./../data/lake-mendota-winters-2022.csv")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE,
error = TRUE)
#library(tidyverse)
## Load in the core tidyverse packages
##  - including ggplot2 for graphics;
##  - and dplyr for data calculations
library(tidyverse)
library(lubridate)
mendota = read_csv("../../data/lake-mendota-winters-2022.csv")
mendota = read_csv("/data/lake-mendota-winters-2022.csv")
mendota = read_csv("./data/lake-mendota-winters-2022.csv")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE, error = TRUE,
fig.height = 3)
library(tidyverse)
library(lubridate)
source("../../scripts/viridis.R")
df_colors = tibble(color = colors()) %>%
mutate(index = row_number(), .before = color)
View(df_colors)
df_colors %>%
mutate(length = str_length(color)) %>%
filter(length == 7)
df_colors %>%
mutate(length = str_length(color)) %>%
filter(length == 7) %>%
arrange(desc(color))
df_colors %>%
mutate(length = str_length(color)) %>%
filter(length == 7) %>%
arrange(asc(color))
df_colors %>%
mutate(length = str_length(color)) %>%
filter(length == 7) %>%
arrange(ascending(color))
df_colors %>%
mutate(length = str_length(color)) %>%
filter(length == 7) %>%
arrange((color))
df_colors %>%
mutate(length = str_length(color)) %>%
filter(length == 7) %>%
arrange(color)
df_colors %>%
mutate(length = str_length(color)) %>%
filter(length == 7) %>%
arrange(color) %>%
slice(1, n())
df_colors %>%
mutate(length = str_length(color)) %>%
filter(length == 7) %>%
arrange(color) %>%
slice(1:3, n())
df_colors %>%
mutate(length = str_length(color)) %>%
filter(length == 7) %>%
arrange(color) %>%
slice(1, n())
seven_letters = df_colors %>%
mutate(length = str_length(color)) %>%
filter(length == 7) %>%
arrange(color) %>%
slice(1, n())
seven_letters %>%
str_detect(color, "\\D")
View(seven_letters)
seven_letters = df_colors %>%
mutate(length = str_length(color)) %>%
filter(length == 7) %>%
arrange(color)
seven_letters %>%
slice(1, n())
seven_letters %>%
str_detect(color, "\\D")
seven_letters %>%
str_detect(color, ".*\\D.*")
seven_letters %>%
str_detect(seven_letters, ".*\\D.*")
seven_letters %>%
str_detect(seven_letters, ".*\\D*.*")
seven_letters %>%
mutate(has_string = str_detect(seven_letters, ".*\\D*.*"))
seven_letters %>%
mutate(has_string = str_detect(color, ".*\\D*.*"))
seven_letters %>%
mutate(has_num = str_detect(color, ".*\\D*.*"))
seven_letters %>%
mutate(no_num = str_detect(color, ".*\\D*.*"))
seven_letters %>%
mutate(no_num = str_detect(color, "\\D*"))
seven_letters %>%
mutate(no_num = str_detect(color, "\\D+"))
seven_letters %>%
mutate(no_num = str_detect(color, "\\d"))
seven_letters %>%
mutate(has_num = str_detect(color, "\\d")) %>%
filter(has_num == FALSE)
seven_letters = df_colors %>%
mutate(length = str_length(color)) %>%
filter(length == 7) %>%
arrange(color)
seven_letters %>%
summary(count = n())
seven_letters %>%
slice(1, n())
seven_letters = df_colors %>%
mutate(length = str_length(color)) %>%
filter(length == 7) %>%
arrange(color)
seven_letters %>%
summarize(count = n())
seven_letters %>%
slice(1, n())
no_num = seven_letters %>%
mutate(has_num = str_detect(color, "\\d")) %>%
filter(has_num == FALSE)
no_num %>%
summarize(count = n())
no_num %>%
slice(1, n())
View(no_num)
no_num = seven_letters %>%
mutate(has_num = str_detect(color, "\\d")) %>%
filter(has_num == FALSE) %>%
arrange(color)
no_num %>%
summarize(count = n())
no_num %>%
slice(1, n())
no_num = seven_letters %>%
mutate(has_num = str_detect(color, "\\d")) %>%
filter(has_num == FALSE) %>%
arrange(color)
no_num %>%
summarize(n = n(),
first = min(color),
last = max(color))
seven_letters = df_colors %>%
mutate(length = str_length(color)) %>%
filter(length == 7) %>%
arrange(color)
seven_letters %>%
summarize(n = n(),
first = min(color),
last = max(color))
df_colors %>%
filter(str_detect(color, ".*ee.*"))
consec_e = df_colors %>%
filter(str_detect(color, ".*ee.*")) %>%
arrange(color)
consec_e %>%
summarize(n = n(),
first = min(color),
last = max(color))
df_colors %>%
filter(str_detect(color, "([:alpha:])\\1"))
df_colors %>%
filter(str_detect(color, ".*([:alpha:])\\1.*"))
consec_letters = df_colors %>%
filter(str_detect(color, ".*([:alpha:])\\1.*")) %>%
arrange(color)
head(consec_letters, 10)
consec_letters = df_colors %>%
filter(str_detect(color, ".*([:alpha:])\\1.*")) %>%
arrange(color) %>%
mutate(consec = str_extract(color, ".*([:alpha:])\\1.*"))
head(consec_letters, 10)
consec_letters = df_colors %>%
filter(str_detect(color, ".*([:alpha:])\\1.*")) %>%
arrange(color) %>%
mutate(consec = str_extract(color, "([:alpha:])\\1"))
head(consec_letters, 10)
consec_letters = df_colors %>%
filter(str_detect(color, ".*([:alpha:])\\1.*")) %>%
arrange(color) %>%
mutate(consec = str_extract(color, "([:alpha:])\\1"))
head(consec_letters, 10)
consec_letters %>%
count(consec) %>%
arrange(desc)
consec_letters = df_colors %>%
filter(str_detect(color, ".*([:alpha:])\\1.*")) %>%
arrange(color) %>%
mutate(consec = str_extract(color, "([:alpha:])\\1"))
head(consec_letters, 10)
consec_letters %>%
count(consec)
consec_letters = df_colors %>%
filter(str_detect(color, ".*([:alpha:])\\1.*")) %>%
arrange(color) %>%
mutate(consec = str_extract(color, "([:alpha:])\\1"))
head(consec_letters, 10)
consec_letters %>%
count(consec) %>%
arrange(desc(n))
consec_letters = df_colors %>%
filter(str_detect(color, ".*([:alpha:])\\1.*")) %>%
arrange(color) %>%
mutate(consec = str_extract(color, "([:alpha:])\\1"))
head(consec_letters, 10)
consec_letters %>%
count(consec) %>%
arrange(desc(n))
consec_letters %>%
filter(str_detect(color, "(cc)|(dd)|(kk)"))
planets = read_csv("../../data/exoplanets-clean-through-2022.csv")
setwd("~/Desktop/STAT 240/homework/hw06")
planets = read_csv("../../data/exoplanets-clean-through-2022.csv")
View(planets)
planets %>%
mutate(star_regex = str_detect(planet, "^star$"))
new_planets = planets %>%
select(id, start) %>%
filter(!str_detect(star, star))
new_planets = planets %>%
select(id, star) %>%
filter(!str_detect(star, star))
new_planets
planets %>%
mutate(star_regex = str_c('^', star, '$'))
planets %>%
mutate(star_regex = str_c('^', star, '$')) %>%
mutate(star_regex = str_replace(star_regex, '\\.', '\\\\.')) %>%
mutate(star_regex = str_replace(star_regex, '\\+', '\\\\+'))
planets %>%
mutate(star_regex = str_c('^', star, '$')) %>%
mutate(star_regex = str_replace(star_regex, '\\.', '\\\\.')) %>%
mutate(star_regex = str_replace(star_regex, '\\+', '\\\\+')) %>%
filter(!str_detect(star, star_regex))
regex_planets = planets %>%
mutate(star_regex = str_c('^', star, '$')) %>%
mutate(star_regex = str_replace(star_regex, '\\.', '\\\\.')) %>%
mutate(star_regex = str_replace(star_regex, '\\+', '\\\\+'))
regex_planets %>%
filter(!str_detect(star, star))
regex_planets %>%
mutate(star_regex = str_sub(star_regex, start=1, end=-1))
new_regex_planets = regex_planets %>%
mutate(star_regex = str_sub(star_regex, start=1, end=-1))
View(new_regex_planets)
new_regex_planets = regex_planets %>%
mutate(star_regex = str_sub(star_regex, start=1, end=-2))
new_regex_planets = regex_planets %>%
mutate(star_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(star_regex = str_c(star_regex,'[:space:][:lower:]$))'))
new_regex_planets = regex_planets %>%
mutate(star_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(star_regex = str_c(star_regex,'[:space:][:lower:]$'))
new_regex_planets = regex_planets %>%
mutate(star_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(star_regex = str_c(star_regex,'[:space:][:lower:]$')) %>%
filter(!str_detect(star,star_regex))
new_regex_planets = regex_planets %>%
mutate(star_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(star_regex = str_c(star_regex,'[:space:][:lower:]$')) %>%
filter(!str_detect(planet,star_regex))
new_regex_planets = regex_planets %>%
mutate(planet_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(planet_regex = str_c(planet_regex,'[:space:][:lower:]$')) %>%
filter(!str_detect(planet,planet_regex))
new_regex_planets = regex_planets %>%
mutate(planet_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(planet_regex = str_c(planet_regex,'[:space:][:lower:]$')) %>%
filter(!str_detect(planet,planet_regex)) %>%
select(id, planet, star, year)
regex_planets %>%
mutate(planet_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(planet_regex = str_c(planet_regex,'[:space:][:lower:]$')) %>%
filter(str_detect(planet,planet_regex))
regex_planets %>%
mutate(planet_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(planet_regex = str_c(planet_regex,'[:space:][:lower:]$')) %>%
filter(str_detect(planet,planet_regex)) %>%
mutate(letter = str_sub(planet, start=-1, end=-1))
regex_planets %>%
mutate(planet_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(planet_regex = str_c(planet_regex,'[:space:][:lower:]$')) %>%
filter(str_detect(planet,planet_regex)) %>%
mutate(letter = str_sub(planet, start=-1, end=-1)) %>%
count(letter)
wrdl = read_csv("../../data/wordle_data.csv") %>%
filter(solution == TRUE) %>%
select(word)
View(wrdl)
wrdl = read_csv("../../data/wordle_data.csv") %>%
filter(solution == TRUE) %>%
select(word)
wrdl %>%
filter(str_detect(word, '[^slaeun]'))
wrdl = read_csv("../../data/wordle_data.csv") %>%
filter(solution == TRUE) %>%
select(word)
wrdl %>%
filter(str_detect(word, '[^slaeun]*'))
wrdl = read_csv("../../data/wordle_data.csv") %>%
filter(solution == TRUE) %>%
select(word)
wrdl %>%
filter(str_detect(word, '^[^slaeunc]o[^slaeun][^slaeunt][^slaeunt]$'))
wrdl = read_csv("../../data/wordle_data.csv") %>%
filter(solution == TRUE) %>%
select(word)
wrdl %>%
filter(str_detect(word, '^[^slaeunc]o[^slaeun][^slaeunt][^slaeunt]$')) %>%
filter(str_detect(word, 't')) %>%
filter(str_detect(word, 'c'))
letter_counts = regex_planets %>%
mutate(planet_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(planet_regex = str_c(planet_regex,'[:space:][:lower:]$')) %>%
filter(str_detect(planet,planet_regex)) %>%
mutate(letter = str_sub(planet, start=-1, end=-1)) %>%
count(letter)
letter_counts = regex_planets %>%
mutate(planet_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(planet_regex = str_c(planet_regex,'[:space:][:lower:]$')) %>%
filter(str_detect(planet,planet_regex)) %>%
mutate(letter = str_sub(planet, start=-1, end=-1)) %>%
count(letter)
ggplot(letter_counts, aes(n)) +
geom_bar()
View(letter_counts)
letter_counts = regex_planets %>%
mutate(planet_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(planet_regex = str_c(planet_regex,'[:space:][:lower:]$')) %>%
filter(str_detect(planet,planet_regex)) %>%
mutate(letter = str_sub(planet, start=-1, end=-1)) %>%
count(letter)
ggplot(letter_counts, aes(x=letter)) +
geom_bar()
letter_counts = regex_planets %>%
mutate(planet_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(planet_regex = str_c(planet_regex,'[:space:][:lower:]$')) %>%
filter(str_detect(planet,planet_regex)) %>%
mutate(letter = str_sub(planet, start=-1, end=-1)) %>%
count(letter)
ggplot(letter_counts, aes(x=letter)) +
geom_histogram()
letter_counts = regex_planets %>%
mutate(planet_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(planet_regex = str_c(planet_regex,'[:space:][:lower:]$')) %>%
filter(str_detect(planet,planet_regex)) %>%
mutate(letter = str_sub(planet, start=-1, end=-1)) %>%
count(letter)
ggplot(letter_counts, aes(x=letter)) +
geom_bar()
letter_counts = regex_planets %>%
mutate(planet_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(planet_regex = str_c(planet_regex,'[:space:][:lower:]$')) %>%
filter(str_detect(planet,planet_regex)) %>%
mutate(letter = str_sub(planet, start=-1, end=-1)) %>%
count(letter)
ggplot(letter_counts, aes(x=n)) +
geom_bar()
letter_counts = regex_planets %>%
mutate(planet_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(planet_regex = str_c(planet_regex,'[:space:][:lower:]$')) %>%
filter(str_detect(planet,planet_regex)) %>%
mutate(letter = str_sub(planet, start=-1, end=-1)) %>%
count(letter)
ggplot(letter_counts, aes(x=letter, y= n)) +
geom_bar()
letter_counts = regex_planets %>%
mutate(planet_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(planet_regex = str_c(planet_regex,'[:space:][:lower:]$')) %>%
filter(str_detect(planet,planet_regex)) %>%
mutate(letter = str_sub(planet, start=-1, end=-1)) %>%
count(letter)
ggplot(letter_counts, aes(x=letter, y=n)) +
geom_col()
letter_counts = regex_planets %>%
mutate(planet_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(planet_regex = str_c(planet_regex,'[:space:][:lower:]$')) %>%
filter(str_detect(planet,planet_regex)) %>%
mutate(letter = str_sub(planet, start=-1, end=-1)) %>%
count(letter)
ggplot(letter_counts, aes(x=letter, y=n)) +
geom_col() +
labs(title="Frequency count of planets last letter appended", x="Letter", y="Frequency")
letter_counts = regex_planets %>%
mutate(planet_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(planet_regex = str_c(planet_regex,'[:space:][:lower:]$')) %>%
filter(str_detect(planet,planet_regex)) %>%
mutate(letter = str_sub(planet, start=-1, end=-1)) %>%
count(letter)
ggplot(letter_counts, aes(x=letter, y=n, color="blue")) +
geom_col() +
labs(title="Frequency count of planets last letter appended", x="Letter", y="Frequency")
letter_counts = regex_planets %>%
mutate(planet_regex = str_sub(star_regex, start=1, end=-2)) %>%
mutate(planet_regex = str_c(planet_regex,'[:space:][:lower:]$')) %>%
filter(str_detect(planet,planet_regex)) %>%
mutate(letter = str_sub(planet, start=-1, end=-1)) %>%
count(letter)
ggplot(letter_counts, aes(x=letter, y=n)) +
geom_col(fill="blue") +
labs(title="Frequency count of planets last letter appended", x="Letter", y="Frequency")
