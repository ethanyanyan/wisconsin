contributors()
install.packages("tidyverse")
?strsplit
mendota = read_csv("../../data/lake-mendota-winters-2022.csv")
## Load in the core tidyverse packages
##  - including ggplot2 for graphics;
##  - and dplyr for data calculations
library(tidyverse)
library(lubridate)
mendota = read_csv("../../data/lake-mendota-winters-2022.csv")
pwd
.
ls
/
mendota = read_csv("../../data/lake-mendota-winters-2022.csv")
mendota = read_csv("./../data/lake-mendota-winters-2022.csv")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE,
error = TRUE)
#library(tidyverse)
## Load in the core tidyverse packages
##  - including ggplot2 for graphics;
##  - and dplyr for data calculations
library(tidyverse)
library(lubridate)
mendota = read_csv("../../data/lake-mendota-winters-2022.csv")
mendota = read_csv("/data/lake-mendota-winters-2022.csv")
mendota = read_csv("./data/lake-mendota-winters-2022.csv")
setwd("~/Desktop/STAT 240/homework/hw01")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, error = TRUE)
## set a random seed so all answers are the same
set.seed(2023)
## generate 50 random numbers from a Poisson distribution with mean 15
rpois(50, 15)
## set a random seed so all answers are the same
set.seed(2023)
## generate 50 random numbers from a Poisson distribution with mean 15
rpois(50, 15)
## set a random seed so all answers are the same
set.seed(2023)
## generate 50 random numbers from a Poisson distribution with mean 15
rpois(50, 15)
## set a random seed so all answers are the same
set.seed(2023)
## generate 50 random numbers from a Poisson distribution with mean 15
rpois(50, 15)
## set a random seed so all answers are the same
set.seed(2023)
## generate 50 random numbers from a Poisson distribution with mean 15
rpois(50, 15)
library(tidyverse)
data(trees)
summarize(trees, n = n(), average = mean(Height))
a1 <- 1:8
a2 <- seq(1,8)
a1
a2
vectorToBeSummed <- 2:500
totalSum <- sum(vectorToBeSummed)
vectorToBeSummed <- 2:500
totalSum <- sum(vectorToBeSummed)
totalSum
2^seq(0, 5, 1)
x = sort(round(rnorm(10, mean = 20, sd = 5), 1))
x
min_value <- min(x)
max_value <- max(x)
min_value
max_value
x[1]
min_value <- min(x)
max_value <- max(x)
min_value
max_value
x[10]
min_value <- min(x)
max_value <- max(x)
is_min <- x[1] == min_value
is_max <- x[10] == max_value
min_value
max_value
is_min
is_max
median_value <- median(x)
median_value
median_value1 <- median(x)
median_value1
median_value2 <- (x[5] + x[6]) / 2
median_value1 <- median(x)
median_value1
median_value2 <- (x[5] + x[6]) / 2
median_value2
test <- x - median_value
test
test <- (x - median_value)^2
test
test <- sum((x - median_value)^2)
test
